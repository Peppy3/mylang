eq: '=='
neq: '!='
lt: '<'
gt: '>'
lte: '<='
gte: '>='
bool_not: 'not'
bool_and: 'and'
bool_or: 'or'
inc: '++'
dec: '--'
add: '+'
sub: '-'
asterisk: '*'
div: '/'
mod: '%'
not: '~'
xor: '^'
ampersand: '&'
or: '|'
shl: '<<'
shr: '>>'
period: '.'
ellipsis: '...'
arrow: '->'
comma: ','
semicolon: ';'
colon: ':'
at: '@'
assignment: '='
assign_add: '+='
assign_sub: '-='
assign_mul: '*='
assign_div: '/='
assign_mod: '%='
assign_shl: '<<='
assign_shr: '>>='
assign_not: '~='
assign_xor: '^='
assign_and: '&='
assign_or: '|='
lparen: '('
rparen: ')'
lcurly: '{'
rcurly: '}'
lsquare: '['
rsquare: ']'
if: 'if'
else: 'else'
switch: 'switch'
case: 'case'
default: 'default'
while: 'while'
do: 'do'
for: 'for'
continue: 'continue'
break: 'break'
return: 'return'
pub: 'pub'
const: 'const'
lin: 'lin'
extern: 'extern'
inline: 'inline'
export: 'export'
linkname: 'linkname'
struct: 'struct'
union: 'union'
enum: 'enum'
null: 'null'
true: 'true'
false: 'false'
int: 'int'
uint: 'uint'
identifier: 'foo'
int: '69'
